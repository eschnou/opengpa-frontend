openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:3000
  description: Generated server url
security:
- bearer-jwt: []
tags:
- name: Knowledge Management
  description: Endpoint for managing Agent knowledge (RAG)
- name: Task Management
  description: "Endpoint for creating, progressing and managing Agent tasks."
- name: Configuration
  description: Endpoints for retrieving application configuration
- name: Authentication
  description: Public endpoint for account creation and authentication
- name: Profile Management
  description: Endpoints for managing user profile and credentials
paths:
  /users/me/password:
    put:
      tags:
      - Profile Management
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordDTO"
        required: true
      responses:
        "200":
          description: OK
  /auth/register:
    post:
      tags:
      - Authentication
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /auth/login:
    post:
      tags:
      - Authentication
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/tasks:
    get:
      tags:
      - Task Management
      operationId: listTasks
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskDTO"
    post:
      tags:
      - Task Management
      operationId: newTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InputDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDTO"
  /api/tasks/{task_id}:
    get:
      tags:
      - Task Management
      operationId: getTask
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDTO"
    post:
      tags:
      - Task Management
      operationId: progressTask
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InputDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/StepDTO"
  /api/tasks/{task_id}/documents:
    post:
      tags:
      - Task Management
      operationId: uploadDocumentToWorkspace
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Document"
  /api/documents:
    get:
      tags:
      - Knowledge Management
      operationId: listDocuments
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RagDocumentDTO"
    post:
      tags:
      - Knowledge Management
      operationId: ingestDocument
      parameters:
      - name: title
        in: query
        required: true
        schema:
          type: string
      - name: description
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /users/me:
    get:
      tags:
      - Profile Management
      operationId: getCurrentUserProfile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserProfileDTO"
    patch:
      tags:
      - Profile Management
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserProfileDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserProfileDTO"
  /api/tasks/{task_id}/steps:
    get:
      tags:
      - Task Management
      operationId: listSteps
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StepDTO"
  /api/tasks/{task_id}/documents/{document_id}:
    get:
      tags:
      - Task Management
      operationId: downloadAgentTaskArtifact
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/documents/{documentId}:
    get:
      tags:
      - Knowledge Management
      operationId: getDocument
      parameters:
      - name: documentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RagDocumentDTO"
    delete:
      tags:
      - Knowledge Management
      operationId: deleteDocument
      parameters:
      - name: documentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/documents/{documentId}/chunks:
    get:
      tags:
      - Knowledge Management
      operationId: getChuinks
      parameters:
      - name: documentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RagChunkDTO"
  /api/configuration/actions:
    get:
      tags:
      - Configuration
      operationId: getActionsConfiguration
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/ActionCategoryInfo"
  /api/configuration/action-categories:
    get:
      tags:
      - Configuration
      operationId: getActionCategories
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryInfoDTO"
  /api/chunks/{chunkId}:
    get:
      tags:
      - chunks-controller
      operationId: getDocument_1
      parameters:
      - name: chunkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RagChunkDTO"
  /:
    get:
      tags:
      - root-controller
      operationId: root
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RedirectView"
components:
  schemas:
    ChangePasswordDTO:
      required:
      - currentPassword
      - newPassword
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          maxLength: 2147483647
          minLength: 8
          type: string
    RegisterRequest:
      required:
      - email
      - name
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 3
          pattern: "^[a-zA-Z0-9._-]+$"
          type: string
        name:
          maxLength: 100
          minLength: 0
          pattern: "^[\\p{L}\\s'-]+$"
          type: string
        email:
          maxLength: 255
          minLength: 0
          pattern: "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$"
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        inviteCode:
          type: string
    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: "#/components/schemas/UserProfileDTO"
    UserProfileDTO:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        name:
          type: string
        email:
          type: string
    AuthRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    InputDTO:
      type: object
      properties:
        message:
          type: string
        stateData:
          type: object
          additionalProperties:
            type: string
        enabledCategories:
          type: array
          items:
            type: string
    TaskDTO:
      type: object
      properties:
        created:
          type: string
          format: date-time
        completed:
          type: string
          format: date-time
        id:
          type: string
        title:
          type: string
        description:
          type: string
        request:
          type: string
        context:
          type: object
          additionalProperties:
            type: string
        enabledCategories:
          type: array
          items:
            type: string
    ActionDTO:
      type: object
      properties:
        name:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: object
        reasoning:
          type: string
        final:
          type: boolean
    DocumentDTO:
      type: object
      properties:
        taskId:
          type: string
        filename:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
    ResultDTO:
      type: object
      properties:
        status:
          type: string
        details:
          type: object
        summary:
          type: string
        error:
          type: string
        message:
          type: string
        actionId:
          type: string
        stateData:
          type: object
          additionalProperties:
            type: string
    StepDTO:
      type: object
      properties:
        input:
          type: string
        action:
          $ref: "#/components/schemas/ActionDTO"
        result:
          $ref: "#/components/schemas/ResultDTO"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentDTO"
    Document:
      type: object
      properties:
        workspaceId:
          type: string
        name:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
    UpdateUserProfileDTO:
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
        email:
          type: string
    RagDocumentDTO:
      type: object
      properties:
        id:
          type: string
        filename:
          type: string
        title:
          type: string
        description:
          type: string
        contentType:
          type: string
        progress:
          type: number
          format: float
    RagChunkDTO:
      type: object
      properties:
        id:
          type: string
        documentId:
          type: string
        documentTitle:
          type: string
        documentDescription:
          type: string
        content:
          type: string
    ActionCategoryInfo:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        icon:
          type: string
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ActionInfo"
    ActionInfo:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    CategoryInfoDTO:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        icon:
          type: string
    ApplicationContext:
      type: object
      properties:
        parent:
          $ref: "#/components/schemas/ApplicationContext"
        id:
          type: string
        displayName:
          type: string
        startupDate:
          type: integer
          format: int64
        applicationName:
          type: string
        autowireCapableBeanFactory:
          $ref: "#/components/schemas/AutowireCapableBeanFactory"
        environment:
          $ref: "#/components/schemas/Environment"
        beanDefinitionCount:
          type: integer
          format: int32
        beanDefinitionNames:
          type: array
          items:
            type: string
        parentBeanFactory:
          $ref: "#/components/schemas/BeanFactory"
        classLoader:
          type: object
          properties:
            name:
              type: string
            registeredAsParallelCapable:
              type: boolean
            parent:
              type: object
              properties:
                name:
                  type: string
                registeredAsParallelCapable:
                  type: boolean
                unnamedModule:
                  type: object
                  properties:
                    name:
                      type: string
                    classLoader:
                      type: object
                      properties:
                        name:
                          type: string
                        registeredAsParallelCapable:
                          type: boolean
                        definedPackages:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              annotations:
                                type: array
                                items:
                                  type: object
                              declaredAnnotations:
                                type: array
                                items:
                                  type: object
                              sealed:
                                type: boolean
                              specificationTitle:
                                type: string
                              specificationVersion:
                                type: string
                              specificationVendor:
                                type: string
                              implementationTitle:
                                type: string
                              implementationVersion:
                                type: string
                              implementationVendor:
                                type: string
                        defaultAssertionStatus:
                          type: boolean
                          writeOnly: true
                    descriptor:
                      type: object
                      properties:
                        open:
                          type: boolean
                        automatic:
                          type: boolean
                    named:
                      type: boolean
                    annotations:
                      type: array
                      items:
                        type: object
                    declaredAnnotations:
                      type: array
                      items:
                        type: object
                    packages:
                      uniqueItems: true
                      type: array
                      items:
                        type: string
                    nativeAccessEnabled:
                      type: boolean
                    layer:
                      type: object
                definedPackages:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      annotations:
                        type: array
                        items:
                          type: object
                      declaredAnnotations:
                        type: array
                        items:
                          type: object
                      sealed:
                        type: boolean
                      specificationTitle:
                        type: string
                      specificationVersion:
                        type: string
                      specificationVendor:
                        type: string
                      implementationTitle:
                        type: string
                      implementationVersion:
                        type: string
                      implementationVendor:
                        type: string
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
            unnamedModule:
              type: object
              properties:
                name:
                  type: string
                classLoader:
                  type: object
                  properties:
                    name:
                      type: string
                    registeredAsParallelCapable:
                      type: boolean
                    definedPackages:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          annotations:
                            type: array
                            items:
                              type: object
                          declaredAnnotations:
                            type: array
                            items:
                              type: object
                          sealed:
                            type: boolean
                          specificationTitle:
                            type: string
                          specificationVersion:
                            type: string
                          specificationVendor:
                            type: string
                          implementationTitle:
                            type: string
                          implementationVersion:
                            type: string
                          implementationVendor:
                            type: string
                    defaultAssertionStatus:
                      type: boolean
                      writeOnly: true
                descriptor:
                  type: object
                  properties:
                    open:
                      type: boolean
                    automatic:
                      type: boolean
                named:
                  type: boolean
                annotations:
                  type: array
                  items:
                    type: object
                declaredAnnotations:
                  type: array
                  items:
                    type: object
                packages:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                nativeAccessEnabled:
                  type: boolean
                layer:
                  type: object
            definedPackages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  annotations:
                    type: array
                    items:
                      type: object
                  declaredAnnotations:
                    type: array
                    items:
                      type: object
                  sealed:
                    type: boolean
                  specificationTitle:
                    type: string
                  specificationVersion:
                    type: string
                  specificationVendor:
                    type: string
                  implementationTitle:
                    type: string
                  implementationVersion:
                    type: string
                  implementationVendor:
                    type: string
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
    AutowireCapableBeanFactory:
      type: object
    BeanFactory:
      type: object
    Environment:
      type: object
      properties:
        activeProfiles:
          type: array
          items:
            type: string
        defaultProfiles:
          type: array
          items:
            type: string
    FilterRegistration:
      type: object
      properties:
        servletNameMappings:
          type: array
          items:
            type: string
        urlPatternMappings:
          type: array
          items:
            type: string
        name:
          type: string
        className:
          type: string
        initParameters:
          type: object
          additionalProperties:
            type: string
    HttpStatusCode:
      type: object
      properties:
        error:
          type: boolean
        is4xxClientError:
          type: boolean
        is5xxServerError:
          type: boolean
        is1xxInformational:
          type: boolean
        is2xxSuccessful:
          type: boolean
        is3xxRedirection:
          type: boolean
    JspConfigDescriptor:
      type: object
      properties:
        jspPropertyGroups:
          type: array
          items:
            $ref: "#/components/schemas/JspPropertyGroupDescriptor"
        taglibs:
          type: array
          items:
            $ref: "#/components/schemas/TaglibDescriptor"
    JspPropertyGroupDescriptor:
      type: object
      properties:
        buffer:
          type: string
        urlPatterns:
          type: array
          items:
            type: string
        errorOnELNotFound:
          type: string
        pageEncoding:
          type: string
        scriptingInvalid:
          type: string
        includePreludes:
          type: array
          items:
            type: string
        includeCodas:
          type: array
          items:
            type: string
        defaultContentType:
          type: string
        elIgnored:
          type: string
        isXml:
          type: string
        deferredSyntaxAllowedAsLiteral:
          type: string
        trimDirectiveWhitespaces:
          type: string
        errorOnUndeclaredNamespace:
          type: string
    RedirectView:
      type: object
      properties:
        applicationContext:
          $ref: "#/components/schemas/ApplicationContext"
        servletContext:
          $ref: "#/components/schemas/ServletContext"
        contentType:
          type: string
        requestContextAttribute:
          type: string
        staticAttributes:
          type: object
          additionalProperties:
            type: object
        exposePathVariables:
          type: boolean
        exposeContextBeansAsAttributes:
          type: boolean
          writeOnly: true
        exposedContextBeanNames:
          type: array
          writeOnly: true
          items:
            type: string
        beanName:
          type: string
        url:
          type: string
        contextRelative:
          type: boolean
          writeOnly: true
        http10Compatible:
          type: boolean
          writeOnly: true
        exposeModelAttributes:
          type: boolean
          writeOnly: true
        encodingScheme:
          type: string
          writeOnly: true
        statusCode:
          $ref: "#/components/schemas/HttpStatusCode"
        expandUriTemplateVariables:
          type: boolean
          writeOnly: true
        propagateQueryParams:
          type: boolean
          writeOnly: true
        hosts:
          type: array
          items:
            type: string
        redirectView:
          type: boolean
        propagateQueryProperties:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
        attributesCSV:
          type: string
          writeOnly: true
        attributesMap:
          type: object
          additionalProperties:
            type: object
    ServletContext:
      type: object
      properties:
        classLoader:
          type: object
          properties:
            name:
              type: string
            registeredAsParallelCapable:
              type: boolean
            definedPackages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  annotations:
                    type: array
                    items:
                      type: object
                  declaredAnnotations:
                    type: array
                    items:
                      type: object
                  sealed:
                    type: boolean
                  specificationTitle:
                    type: string
                  specificationVersion:
                    type: string
                  specificationVendor:
                    type: string
                  implementationTitle:
                    type: string
                  implementationVersion:
                    type: string
                  implementationVendor:
                    type: string
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
        majorVersion:
          type: integer
          format: int32
        minorVersion:
          type: integer
          format: int32
        contextPath:
          type: string
        serverInfo:
          type: string
        servletContextName:
          type: string
        filterRegistrations:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FilterRegistration"
        jspConfigDescriptor:
          $ref: "#/components/schemas/JspConfigDescriptor"
        sessionTimeout:
          type: integer
          format: int32
        sessionCookieConfig:
          $ref: "#/components/schemas/SessionCookieConfig"
        virtualServerName:
          type: string
        initParameterNames:
          type: object
        attributeNames:
          type: object
        effectiveSessionTrackingModes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - COOKIE
            - URL
            - SSL
        effectiveMajorVersion:
          type: integer
          format: int32
        effectiveMinorVersion:
          type: integer
          format: int32
        defaultSessionTrackingModes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - COOKIE
            - URL
            - SSL
        requestCharacterEncoding:
          type: string
        responseCharacterEncoding:
          type: string
        servletRegistrations:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/ServletRegistration"
        sessionTrackingModes:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
            enum:
            - COOKIE
            - URL
            - SSL
    ServletRegistration:
      type: object
      properties:
        mappings:
          type: array
          items:
            type: string
        runAsRole:
          type: string
        name:
          type: string
        className:
          type: string
        initParameters:
          type: object
          additionalProperties:
            type: string
    SessionCookieConfig:
      type: object
      properties:
        domain:
          type: string
        maxAge:
          type: integer
          format: int32
        name:
          type: string
        path:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        comment:
          type: string
          deprecated: true
        secure:
          type: boolean
        httpOnly:
          type: boolean
    TaglibDescriptor:
      type: object
      properties:
        taglibLocation:
          type: string
        taglibURI:
          type: string
  securitySchemes:
    bearer-jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
